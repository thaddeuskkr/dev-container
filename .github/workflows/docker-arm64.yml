name: Docker Build - arm64

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
  push:
    branches:
      - "*"
    paths:
      - "Dockerfile"
      - "entrypoint.sh"
      - ".github/workflows/docker-arm64.yml"
    tags: ["v*.*.*"]
  pull_request:
    branches:
      - "*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: thaddeuskkr/devc

jobs:
  build-arm64:
    runs-on: ubuntu-24.04-arm
    permissions:
      actions: write
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Clear cache
        uses: actions/github-script@v7
        with:
          script: |
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            for (const cache of caches.data.actions_caches) {
              github.rest.actions.deleteActionsCacheById({
                owner: context.repo.owner,
                repo: context.repo.repo,
                cache_id: cache.id,
              })
            }

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,suffix=-arm64
            type=ref,event=pr,suffix=-arm64
            type=sha,format=short,prefix=,suffix=-arm64
            type=schedule,pattern={{date 'YYYYMMDD'}},suffix=-arm64
            type=raw,value=latest,suffix=-arm64
            type=raw,value=arm64

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/arm64

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
